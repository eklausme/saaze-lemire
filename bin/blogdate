#!/bin/perl -W
# Generate year-overview
# Command-line flags:
#   -g           generate German title
#   -p           prefix for URL, e.g., -p../
#   -y<year>     generate file for <year>, e.g., -y2021
#
# Chdir to blog directory and run:
#     for i in *; do ( echo $i; cd $i; blogdate -y$i *.md > index.md ) done
# Another example with special prefix:
#     for i in *; do ( echo $i; cd $i; blogdate -y$i -p'*<?=$rbase?>*'/blog/$i/ *.md > index.md ) done
#
# Elmar Klausmeier, 14-Nov-2021
# Elmar Klausmeier, 09-Jan-2024: comments-link added
# Elmar Klausmeier, 14-Jan-2024: create empty comment files, if there were no comments yet


use strict;
use Getopt::Std;

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year += 1900;

my %opts = ('g' => 0, 'p' => '', 'y' => $year);
getopts('gp:y:',\%opts) || die("Illegal option");
my $cnt = 0;
$year = defined($opts{'y'}) ? $opts{'y'} : $year;
my $mdtitle = defined($opts{'g'}) && $opts{'g'} ? "Jahr: $year" : "Index for Year $year";
my $prefix = defined($opts{'p'}) && length($opts{'p'}) > 0 ? $opts{'p'} : "/lemire/blog";

sub markdownfile(@) {
	my $f = $_[0];
	my ($flag,$title,$date) = (0,"","");
	open(F,"<$f") || die("Cannot open $f");
	while (<F>) {
		if (/^\-\-\-\s*$/) {
			last if (++$flag >= 2);
		} elsif (/^title:\s+(.+)$/) {
			$title = $1;
			$title =~ s/^"//;
			$title =~ s/"$//;
		} elsif (/^date:\s+"(\d\d\d\d\-\d\d\-\d\d)/) {
			$date = $1;
		}
	}
	if (length($title) > 0  &&  length($date) > 0) {
		my ($cmnt,$ix,$cmntFile) = ("",rindex($f,'/'),"");
		if ($ix >= 0) {
			$cmnt = substr($f,$ix,-3);
			$cmnt = substr($f,0,$ix) . substr($cmnt,0,7) . 'comment-' . substr($cmnt,3+$ix);
			$cmntFile = $cmnt;
		} else {
			$cmnt = substr($f,0,-3);
			$cmnt = substr($cmnt,0,6) . 'comment-' . substr($cmnt,6);
			$cmntFile = $cmnt;
			($f,$cmnt) = ($year . '/' . $f, $year . '/' . $cmnt);
		}
		$cmntFile = $cmntFile . '.md';
		if (! -f $cmntFile) {	# create "empty" comment file
			open(CMNT,">$cmntFile") || die("Cannot create $cmntFile");
			printf CMNT "---\ndate: \"%s 12:00:00\"\ntitle: \"%s\"\n---\n\n[%s](%s/%s)\n\n",
				$date,$title,$title,$prefix,substr($f,0,-3);
			close(CMNT) || die("Cannot close $cmntFile");
		}
		printf("%d. %s: [%s](%s/%s) &nbsp; [&#x1F5EA;](%s/%s)\n",
			++$cnt,$date,$title,$prefix,substr($f,0,-3),$prefix,$cmnt);
	}
	close(F) || die("Cannot close $f");
}

print <<EOS;
---
title: "$mdtitle"
date: "$year-12-31 23:55:00"
---

EOS

while (<@ARGV>) {
	#printf("ARGV=|%s|\n",$_);
	next if (substr($_,-8) eq "index.md");
	next if (/\d\d\-\d\d\-comment\-[^\.]+.md$/);
	markdownfile($_);
}

print "\n\n\n";

